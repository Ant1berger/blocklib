{"version":3,"file":"knob-glossy/index.css","mappings":";;;AAAA;IACI,8BAA8B;IAC9B,sBAAsB;IACtB,kBAAkB;IAClB,qBAAqB;IACrB,oBAAoB;IACpB,mBAAmB;IACnB,mBAAmB;IACnB,gCAAgC;IAChC,mBAAmB;IACnB,gCAAgC;IAChC,kBAAkB;IAClB,oBAAoB,EAAE,mBAAmB;IACzC,mBAAmB;IACnB,mBAAmB;IACnB,SAAS;IACT,gBAAgB;IAChB,eAAe;IACf,wCAAwC;IACxC,6CAA6C;IAC7C,yBAAiB;OAAjB,sBAAiB;YAAjB,iBAAiB;IACjB,oEAAoE;IACpE,kBAAkB;IAClB,sEAAsE;;IAEtE;QACI,WAAW;QACX,kBAAkB;QAClB,SAAS;QACT,UAAU;QACV,WAAW;QACX,WAAW;QACX,oBAAoB;QACpB,sEAAsE;IAC1E;AACJ;;AAEA,kCAAkC;AAClC,qEAAqE;AACrE,gFAAgF;AAChF;IACI,iBAAiB;AACrB;;AAEA;IACI,kBAAkB;IAClB,iBAAiB;IACjB,kBAAkB;IAClB,cAAc;AAClB;;AAEA;IACI,oBAAoB;AACxB;;AAEA;IACI,mBAAmB;IACnB,qBAAqB;IACrB,WAAW;IACX,gBAAgB;IAChB,kBAAkB;IAClB,UAAU;AACd;;AAEA;IACI,mCAAmC;IACnC,2BAA2B;IAC3B,uBAAuB;AAC3B;;AAEA,6BAA6B;;AAE7B;;IAEI;QACI,gCAAgC;IACpC;AACJ;;AAEA;IACI,aAAa;AACjB;;AAEA,2GAA2G;AAC3G;;IAEI,qEAAqE;IACrE,oEAAoE;;IAEpE;QACI,oEAAoE;IACxE;AACJ","sources":["webpack://custom-blocks/./src/knob-glossy/index.css"],"sourcesContent":[".knob-glossy {\n    font-family: var(--fontFamily);\n    font-size: var(--size);\n    text-align: center;\n    text-decoration: none;\n    display: inline-flex;\n    white-space: nowrap;\n    color: var(--color);\n    background-color: var(--bgColor);\n    border-style: solid;\n    border-color: var(--borderColor);\n    border-width: .1em;\n    border-radius: 100em; /* Always rounded */\n    padding-inline: 1em;\n    padding-block: .5em;\n    gap: .2em;\n    line-height: 1.3;\n    cursor: pointer;\n    -webkit-tap-highlight-color: transparent;\n    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\n    user-select: none;\n    background-image: linear-gradient(hsla(0, 0%, 0%, 0.7), transparent);\n    position: relative;\n    box-shadow: 0 .1em .2em .1em oklch(from var(--grey_start) l c h / 20%);\n\n    &::before {\n        content: \"\";\n        position: absolute;\n        top: .1em;\n        left: .5em;\n        right: .5em;\n        bottom: 1em;\n        border-radius: 100em;\n        background-image: linear-gradient(hsla(0, 0%, 100%, 0.9), transparent);\n    }\n}\n\n/* Icons come from Google Fonts: */\n/* https://fonts.google.com/icons?icon.size=24&icon.color=%235f6368 */\n/* Used as inline SVGs to allow CSS control on their sub-elements (e.g. fill). */\n.knob-glossy.-leftIcon {\n    text-align: start;\n}\n\n.knob-glossy.-leftIcon svg {\n    inline-size: 1.3em;\n    block-size: 1.3em;\n    fill: var(--color);\n    flex-shrink: 0;\n}\n\n.knob-glossy.-invisibleText {\n    padding-inline: .5em;\n}\n\n.knob-glossy.-invisibleText .knob-glossy-text {\n    clip: rect(0 0 0 0);\n    clip-path: inset(50%);\n    height: 1px;\n    overflow: hidden;\n    position: absolute;\n    width: 1px;\n}\n\n.knob-glossy.-fullWidth {\n    inline-size: -webkit-fill-available;\n    inline-size: -moz-available;\n    justify-content: center;\n}\n\n/* Hover and focused states */\n\n@media(prefers-reduced-motion: no-preference) {\n\n    .knob-glossy.-hoverBGLighten {\n        transition: background-color .2s;\n    }\n}\n\n.knob-glossy.-hoverBGLighten {\n    outline: none;\n}\n\n/* Have to ask for a result in HSL to get a constant lightening (or darkening) while keeping the same hue */\n.knob-glossy.-hoverBGLighten:hover,\n.knob-glossy.-hoverBGLighten:focus-visible {\n    background-color: color-mix(in hsl, var(--bgColor) 100%, #ffffff 20%);\n    background-image: linear-gradient(hsla(0, 0%, 0%, 0.5), transparent);\n\n    &::before {\n        background-image: linear-gradient(hsla(0, 0%, 100%, 1), transparent);\n    }\n}\n"],"names":[],"sourceRoot":""}