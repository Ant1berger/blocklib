/*!**********************************************************************************************************************************************************************************!*\
  !*** css ./node_modules/css-loader/dist/cjs.js??ruleSet[1].rules[2].use[1]!./node_modules/postcss-loader/dist/cjs.js??ruleSet[1].rules[2].use[2]!./src/stackable-link/index.css ***!
  \**********************************************************************************************************************************************************************************/
.stackable-link {
    font-family: var(--fontFamily);
    font-size: var(--size);
    line-height: 1.5;
    text-decoration: none;
    display: flex;
    gap: .5em;
    inline-size: -webkit-fill-available;
    inline-size: -moz-available;
    color: var(--color);
    background-color: var(--bgColor);
    padding-inline: 1em;
    padding-block: .5em;
    cursor: pointer;
    -webkit-tap-highlight-color: transparent;
    -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
    -webkit-user-select: none;
       -moz-user-select: none;
            user-select: none;
}

.stackable-link.-leftIcon > svg,
.stackable-link.-rightIcon > svg {
    /* Could have 2 SVGs: one left and one right. */
    inline-size: 1.5em;
    block-size: 1.5em;
    fill: var(--color);
    flex-shrink: 0;
}

.stackable-link.-rightIcon > svg:last-child {
    margin-inline-start: auto;
}

/* Hover and focused states */

@media(prefers-reduced-motion: no-preference) {

    .stackable-link.-rightIcon > svg:last-child {
        transition: translate .2s;
    }

    .stackable-link.-hoverBGDarken,
    .stackable-link.-hoverBGLighten {
        transition: background-color .2s;
    }
}

.stackable-link:hover.-rightIcon > svg:last-child,
.stackable-link:focus-visible.-rightIcon > svg:last-child {
    translate: .5em;
}

.stackable-link.-hoverBGDarken,
.stackable-link.-hoverBGLighten {
    outline: none;
}

/* Have to ask for a result in HSL to get a constant lightening (or darkening) while keeping the same hue */
.stackable-link.-hoverBGDarken:hover,
.stackable-link.-hoverBGDarken:focus-visible,
.stackable-link.-hoverBGDarken.-current {
    background-color: color-mix(in hsl, var(--bgColor) 100%, #000000 30%);
}

.stackable-link.-hoverBGLighten:hover,
.stackable-link.-hoverBGLighten:focus-visible,
.stackable-link.-hoverBGLighten.-current {
    background-color: color-mix(in hsl, var(--bgColor) 100%, #ffffff 10%);
}

@media(prefers-reduced-motion: no-preference) {

    .stackable-link.-hoverUnderlined::after {
        transition: block-size .2s;
    }
}

.stackable-link.-hoverUnderlined {
    position: relative;
}

.stackable-link.-hoverUnderlined::after {
    content: "";
    position: absolute;
    inset-block-end: 0;
    inset-inline-start: 0;
    inset-inline-end: 0;
    block-size: 0;
    background-color: var(--color);
}

.stackable-link.-hoverUnderlined:hover::after,
.stackable-link.-hoverUnderlined:focus-visible::after,
.stackable-link.-hoverUnderlined.-current::after {
    block-size: .3em;
}


/*# sourceMappingURL=index.css.map*/